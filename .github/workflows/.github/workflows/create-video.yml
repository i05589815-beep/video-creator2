name: 🎥 Automated Video Creator

on:
  issues:
    types: [opened]

jobs:
  create-video:
    runs-on: ubuntu-latest
    steps:
    - name: 🔄 Checkout repository
      uses: actions/checkout@v4
      
    - name: 📝 Extract URLs from issue body
      id: extract_urls
      run: |
        echo "📋 Issue body content:"
        echo "${{ github.event.issue.body }}"
        
        # Extract image URL
        IMAGE_URL=$(echo "${{ github.event.issue.body }}" | grep -i 'image_url' | cut -d: -f2- | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
        if [ -z "$IMAGE_URL" ]; then
          echo "❌ No image_url found, using default image"
          IMAGE_URL="https://picsum.photos/1280/720"
        fi
        echo "🖼️ Image URL: $IMAGE_URL"
        
        # Extract audio URL
        AUDIO_URL=$(echo "${{ github.event.issue.body }}" | grep -i 'audio_url' | cut -d: -f2- | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
        if [ -z "$AUDIO_URL" ]; then
          echo "❌ No audio_url found, using default audio"
          AUDIO_URL="https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3"
        fi
        echo "🔊 Audio URL: $AUDIO_URL"
        
        # Set outputs
        echo "image_url=$IMAGE_URL" >> $GITHUB_OUTPUT
        echo "audio_url=$AUDIO_URL" >> $GITHUB_OUTPUT
        
    - name: ⚙️ Setup FFmpeg
      run: |
        echo "Installing FFmpeg..."
        sudo apt-get update
        sudo apt-get install -y ffmpeg
        echo "FFmpeg version:"
        ffmpeg -version
        
    - name: 📥 Download media files
      run: |
        echo "Downloading image from: ${{ steps.extract_urls.outputs.image_url }}"
        # Try image download with retries
        for i in {1..3}; do
          if wget --timeout=30 -q "${{ steps.extract_urls.outputs.image_url }}" -O image.jpg; then
            echo "✅ Image downloaded successfully (attempt $i)"
            break
          else
            echo "❌ Image download failed (attempt $i)"
            if [ $i -eq 3 ]; then
              echo "🔄 Using fallback image"
              wget -q "https://picsum.photos/1280/720" -O image.jpg
            fi
            sleep 2
          fi
        done
        
        echo "Downloading audio from: ${{ steps.extract_urls.outputs.audio_url }}"
        # Try audio download with retries
        for i in {1..3}; do
          if wget --timeout=30 -q "${{ steps.extract_urls.outputs.audio_url }}" -O audio.mp3; then
            echo "✅ Audio downloaded successfully (attempt $i)"
            break
          else
            echo "❌ Audio download failed (attempt $i)"
            if [ $i -eq 3 ]; then
              echo "🔄 Using fallback audio"
              wget -q "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3" -O audio.mp3
            fi
            sleep 2
          fi
        done
        
        echo "📁 Files downloaded:"
        ls -la
        file image.jpg || true
        file audio.mp3 || true
        
    - name: 🎬 Create video with FFmpeg
      run: |
        echo "Creating video..."
        # Check if files exist
        if [ ! -f image.jpg ]; then
          echo "❌ Image file missing, downloading default"
          wget -q "https://picsum.photos/1280/720" -O image.jpg
        fi
        
        if [ ! -f audio.mp3 ]; then
          echo "❌ Audio file missing, downloading default"
          wget -q "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3" -O audio.mp3
        fi
        
        # Create video
        echo "🎥 Generating video from image and audio..."
        ffmpeg -loop 1 -i image.jpg -i audio.mp3 \
          -c:v libx264 -tune stillimage -c:a aac \
          -b:a 192k -pix_fmt yuv420p -shortest \
          -vf "scale=1280:720:force_original_aspect_ratio=decrease,pad=1280:720:(ow-iw)/2:(oh-ih)/2" \
          -y output.mp4
          
        echo "✅ Video created successfully!"
        echo "📊 Video file info:"
        ls -la output.mp4
        echo "⏱️ Duration:"
        ffprobe -i output.mp4 -show_entries format=duration -v quiet -of csv="p=0" 2>/dev/null || echo "Cannot get duration"
        
    - name: ⬆️ Upload video artifact
      uses: actions/upload-artifact@v4
      with:
        name: video
        path: output.mp4
        retention-days: 7
        
    - name: ✅ Completion message
      run: |
        echo "🎉 Video creation completed successfully!"
        echo "📥 Download the video from the Artifacts section"
        echo "🔗 Issue URL: ${{ github.event.issue.html_url }}"
